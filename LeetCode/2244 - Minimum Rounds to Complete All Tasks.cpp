/*
각 레벨의 빈도 수를 구해줍니다.
한 번에 최대한 많은 태스크를 처리할수록, 최소한의 횟수로 모든 작업을 수행할 수 있을 것입니다.
각 태스크를 3개씩 처리한다고 가정해보겠습니다. 
그러면 0개 또는 1개 또는 2개의 태스크가 남게 됩니다.
즉, 빈도 수를 3으로 나눈 나머지는, 0 또는 1 또는 2가 될 수 있습니다.
2개의 태스크가 남는다면, 2개의 태스크를 1번 더 처리해주면 됩니다.
1개의 태스크가 남는다면, 마지막으로 작업했던 3개의 태스크를 취소하고, 남은 4개의 태스크를 2개씩 2번 처리해주면 됩니다.
이에 따라, 각 레벨에 대한 최소한의 수행 횟수는,
몫 = (빈도수 / 3)
나머지 = (빈도수 % 3)
수행 횟수 = (몫) + (나머지 > 0)
위 과정으로 구할 수 있습니다.
빈도 수가 1이면 모든 작업을 완료할 수 없습니다.
*/

class Solution {
public:
    
    int minimumRounds(vector<int>& tasks) {
        map<int, int> m;
        for(int task : tasks) {
            m[task]++;
        }

        int result = 0;
        for(auto& p : m) {
            if(p.second == 1) return -1;
            int q = p.second / 3;
            int r = p.second % 3;
            result += q + !!r;
        }
        return result;
    }
};
